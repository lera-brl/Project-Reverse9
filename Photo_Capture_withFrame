import cv2
import mediapipe as mp
import math

# Инициализация MediaPipe
mp_face_mesh = mp.solutions.face_mesh
face_mesh = mp_face_mesh.FaceMesh(static_image_mode=False, max_num_faces=1)

# Камера
cap = cv2.VideoCapture(0)
frame_width = int(cap.get(3))
frame_height = int(cap.get(4))
print(f"Frame size: {frame_width}x{frame_height}")

# Центр круга
center_x = frame_width // 2
center_y = frame_height // 2
circle_radius = 180
message = ""
ready = False

while cap.isOpened():
    success, frame = cap.read()
    if not success:
        print("Камера не работает.")
        break

    frame = cv2.flip(frame, 1)
    clean_frame = frame.copy()
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = face_mesh.process(rgb_frame)

    # Нарисовать круг
    cv2.circle(frame, (center_x, center_y), circle_radius, (0, 255, 0), 2)

    if results.multi_face_landmarks:
        face_landmarks = results.multi_face_landmarks[0]
        mesh_points = [(int(p.x * frame_width), int(p.y * frame_height)) for p in face_landmarks.landmark]

        # Центр лица (точка 1)
        face_x, face_y = mesh_points[1]
        dist = math.hypot(face_x - center_x, face_y - center_y)

        # Размер лица
        x1, y1 = mesh_points[234]
        x2, y2 = mesh_points[454]
        face_width = abs(x2 - x1)
        y_top = mesh_points[10][1]
        y_bot = mesh_points[152][1]
        face_height = abs(y_bot - y_top)

        if dist < circle_radius:
            message = "READY — Press SPACE to capture"
            ready = True
        else:
            message = "Center your face"
            ready = False

        # Нарисовать точки
        mp.solutions.drawing_utils.draw_landmarks(
            frame,
            face_landmarks,
            mp_face_mesh.FACEMESH_TESSELATION,
            landmark_drawing_spec=None,
            connection_drawing_spec=mp.solutions.drawing_utils.DrawingSpec(color=(0, 255, 0), thickness=1)
        )

    else:
        message = "Face not detected"
        ready = False

    # Показываем сообщение
    if message:
        cv2.putText(frame, message, (30, 60), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 3)

    # Показываем окно
    cv2.imshow("Reverse9 Live", frame)

    # Управление клавишами
    key = cv2.waitKey(5) & 0xFF
    if key == 27 or key == ord('q'):
        print("Выход из программы.")
        break
    elif key == 32 and ready:  # Пробел = 32
        cv2.imwrite("captured_face.png", clean_frame)
        print("Photo captured: captured_face.png")
        print(f"Image size: {frame_width}x{frame_height}")
        print(f"Face size: width {face_width}px, height {face_height}px")
        frozen = cv2.imread("captured_face.png")
        if frozen is not None:
            cv2.imshow("Reverse9 Photo", frozen)
        else:
            print("Ошибка: не удалось загрузить изображение.")

cap.release()
cv2.destroyAllWindows()
